/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
        //calling the first function and printing the acceptedArray

        System.out.println("------- First func --------------");
        int [] acceptedArr=roll(3); //saving the return value in a new array to print it
        for (int i = 0; i < acceptedArr.length; i++) {
            System.out.println(acceptedArr[i]);
        }
        System.out.println("------------------------------");

        //calling the second function and printing the return value
        // that will be a true if there's a duplicating inside the sent array otherwise the value will be false
        System.out.println("-------- Second func ---------");
        int [] sentArr={1,2,6,5,6};
        System.out.println("Is there any duplicate inside the provided array ? the answer is: "+containsDuplicates(sentArr));
        System.out.println("------------------------------");

        System.out.println("------ Third func -------------");
        int [] func3Arr={5,10,15};
        System.out.println("The average for the provided array elements is : "+getAverage(func3Arr));
        System.out.println("------------------------------");
        System.out.println("------ Fourth func -------------");
        int [][] func4Arr={
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println("The Lowest average array ");
        int [] newArrfunc4=getLowestAverage(func4Arr);
        for (int i = 0; i < newArrfunc4.length; i++) {
            System.out.println(newArrfunc4[i]);
        }
        System.out.println("------------------------------");

    }
    public static int [] roll(int n){
        int [] arr=new int[n];
        int min=1;
        int max=6;

        for (int i=0; i<n;i++){
            arr[i]=min + (int)(Math.random() * ((max - min) + 1));;
        }
        return arr;
    }
    public static boolean containsDuplicates(int [] arr){
        boolean value=false;
        for (int i = 0; i < arr.length; i++) {
            int element=arr[i];
            for (int j = 0; j < arr.length-arr[i] ; j++) {
                if(arr[j]==element){
                    value=false;
                }else {
                    value=true;
                }
            }
        }
        return value;
    }
    public static double getAverage(int [] arr){
        double avg=0;
        int sum=0;
        int lengthOfArr=arr.length;
        for (int i = 0; i < arr.length; i++) {
            sum+=arr[i];
        }
        avg=(double) sum/lengthOfArr;
        return avg;
    }
    public static int[] getLowestAverage(int [][] arr){
        double lowestAvg=500;
        int [] lowestAvgArr=new int[arr[0].length];
        for (int i = 0; i < arr.length; i++) {
        double [] arrayOfAverages=new double[arr[i].length];
            int sumEachArr=0;
            for (int j = 0; j < arr[i].length; j++) {
                sumEachArr+=arr[i][j];
            }
            arrayOfAverages[i]=(double) sumEachArr/arr[i].length;
            if(arrayOfAverages[i]<lowestAvg){
                lowestAvg=arrayOfAverages[i];
                lowestAvgArr=arr[i];
            }
        }
        return lowestAvgArr;

    }
}
